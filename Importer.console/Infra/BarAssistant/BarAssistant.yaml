openapi: 3.1.0
info:
  title: Bar Assistant API
  description: >-
    **Bar Assistant** is all-in-one solution for managing your home bar.
    Compared to other recipe management software that usually tries to be more
    for general use, Bar Assistant is made specifically for managing cocktail
    recipes. This means that there are a lot of cocktail-oriented features, like
    ingredient substitutes, first-class ingredients, ABV calculations, unit
    switching and more.


    [Homepage](https://barassistant.app/) &middot; [Official
    Documentation](https://bar-assistant.github.io/docs/) &middot; [GitHub
    Repository](https://github.com/karlomikus/bar-assistant)


    ## Rate Limiting


    The rate limit is set to 1,000 requests per minute per IP address, or per
    user ID if authenticated. Certain endpoints have specific rate limits, such
    as importing and exporting data. Exporting is limited to 1 request per
    minute, while importing is restricted to 2 requests per minute for users
    without a subscription (applicable to cloud-hosted instances).


    ## Content-Type


    Ensure that each request includes the `Content-Type: application/json`
    header.


    ## Auth


    Include your login token in the header of every request, using the following
    format: `Authorization: Bearer 1|dvWHLWuZbmWWFbjaUDla393Q9jK5Ou9ujWYPcvII`.


    ## Bar context


    For requests that require a reference to a specific bar, include the
    `bar_id` in the query string, e.g., `/cocktails?bar_id=1`, or use
    `Bar-Assistant-Bar-Id` header in your request.


    ## Authorization


    A `403 Forbidden` status code will be returned if you attempt to access a
    resource without the necessary permissions.


    ## Sorting


    Certain endpoints support sorting by specific attributes. Prepend `-` to an
    attribute for descending order, or omit it for ascending order. For example,
    `?sort=name` sorts by the `name` attribute in ascending order. Multiple
    sorts can be applied by separating attributes with a comma.


    ## Includes


    Some endpoints support the inclusion of related data on demand. To include
    multiple relationships, separate them with a comma. For example,
    `?include=notes,user` will include additional data for both notes and the
    user.


    ## Pagination


    To paginate results, use the `?per_page=30` parameter to limit the number of
    results per request. To navigate to a specific page, use `?page=3`.


    ## Filtering


    Certain endpoints allow filtering by specific attributes. For example,
    `?filter[attribute_name]=value` filters results based on the given
    attribute. Multiple filter values can be separated by commas, e.g.,
    `?filter[attribute_name]=value1,value2`.
  contact:
    name: Bar Assistant
    url: 'https://barassistant.app'
    email: info@barassistant.app
  license:
    name: MIT
    url: 'https://github.com/karlomikus/bar-assistant/blob/master/LICENSE'
  version: v4.0.2
servers:
  - url: 'http://localhost:8000/api'
    description: Local docker development
  - url: 'https://api.barassistant.app/api'
    description: Production
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate user and get a token
      operationId: ff0821f3f5e448e9be30bed07cac39a3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Token'
                type: object
        '400':
          description: Unable to authenticate
      security: []
  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout currently authenticated user
      operationId: 7faef09646fa779e3f4eb458d4472c75
      responses:
        '204':
          description: Successful response
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      operationId: 26578afaf886b858f56e5e1b8fc3403b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
      security: []
  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request a new user password
      operationId: 7a6f983e087620ddd905bd4925f83983
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: admin@example.com
              type: object
      responses:
        '204':
          description: Password reset link sent
        '400':
          description: Unable to send password reset link
      security: []
  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset user password
      operationId: 5000f083616176e5a4edc804f813aecc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: token-from-email
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  minLength: 5
                  example: password
                password_confirmation:
                  type: string
                  minLength: 5
                  example: password
              type: object
      responses:
        '204':
          description: Password succssfully reset
        '400':
          description: Unable to reset password
      security: []
  '/auth/verify/{id}/{hash}':
    post:
      tags:
        - Authentication
      summary: Confirm user account
      operationId: 015719985fb92cfb18e9c6a19c82b1db
      parameters:
        - name: id
          in: path
          description: Database id of a user
          required: true
          schema:
            type: integer
        - name: hash
          in: path
          description: Hash string sent to user email
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Account confirmed
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
      security: []
  /bars:
    get:
      tags:
        - Bars
      summary: Show a list of bars
      description: >-
        Show a list of bars user has access to. Includes bars that user has made
        and bars he is a member of.
      operationId: 8e4aff1910c2f6b973c0bcff7ac77418
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bar'
                type: object
    post:
      tags:
        - Bars
      summary: Create a new bar
      operationId: af500d926f43cd1cd146adc9c46f8e41
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Bar'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '422':
          description: Request validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  '/bars/{id}':
    get:
      tags:
        - Bars
      summary: Show a specific bar
      operationId: 6e92536f11339d30675019e6e93f9ce4
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Bar'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Bars
      summary: Update a bar
      operationId: 06fb0f42934fc2cd15b00b25027494d1
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Bar'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '422':
          description: Request validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    delete:
      tags:
        - Bars
      summary: Delete a bar
      operationId: dac7d15bfe40981c358d5a52c8a9e31b
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /bars/join:
    post:
      tags:
        - Bars
      summary: Join a bar via invite code
      operationId: 825a1e86cd76f3ca07ad2f11ea45f648
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                invite_code:
                  type: string
                  example: 01H8S3VH2HTEB3D893AW8NTBBC
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Bar'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/bars/{id}/memberships':
    get:
      tags:
        - Bars
      summary: List all members of a bar
      operationId: 7a49e26fb4754edae7aa107fd1e35205
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/BarMembership'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Bars
      summary: Leave a bar you are a member of
      operationId: c3986ac9cf5fe6e4090b993e323480ad
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/bars/{id}/memberships/{userId}':
    delete:
      tags:
        - Bars
      summary: Remove a member from a bar
      operationId: 74df840e62b14107dd9d65b49ed84b27
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          description: Database id of a user
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/bars/{id}/transfer':
    post:
      tags:
        - Bars
      summary: Transfer bar ownership
      operationId: 208f8a6850027fe0ea9f3b304975fa30
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                user_id:
                  description: Database id of a user you want to transfer ownership to
                  type: integer
                  example: 1
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/bars/{id}/status':
    post:
      tags:
        - Bars
      summary: Update bar status
      operationId: 200c1aba9ada2cd66a7d0b7a4ec90a8e
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                status:
                  $ref: '#/components/schemas/BarStatusEnum'
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /cocktails:
    get:
      tags:
        - Cocktails
      summary: Show a list of cocktails
      operationId: 4400982243630124406e8675b4632a32
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
        - name: filter
          in: query
          description: Filter by attributes
          style: deepObject
          explode: true
          schema:
            properties:
              id:
                type: string
              name:
                type: string
              ingredient_name:
                type: string
              tag_id:
                type: string
              created_user_id:
                type: string
              glass_id:
                type: string
              cocktail_method_id:
                type: string
              collection_id:
                type: string
              favorites:
                type: boolean
              on_shelf:
                type: boolean
              user_shelves:
                type: string
              shelf_ingredients:
                type: string
              is_public:
                type: boolean
              user_rating_min:
                type: string
              user_rating_max:
                type: string
              average_rating_min:
                type: string
              average_rating_max:
                type: string
              abv_min:
                type: string
              abv_max:
                type: string
              main_ingredient_id:
                type: string
              total_ingredients:
                type: string
              missing_ingredients:
                type: string
              specific_ingredients:
                type: string
              ignore_ingredients:
                type: string
            type: object
        - name: sort
          in: query
          description: >-
            Sort by attributes. Available attributes: `name`, `created_at`,
            `average_rating`, `user_rating`, `abv`, `total_ingredients`,
            `missing_ingredients`, `favorited_at`.
          schema:
            type: string
        - name: include
          in: query
          description: >-
            Include additional relationships. Available relations: `glass`,
            `method`, `user`, `navigation`, `utensils`, `createdUser`,
            `updatedUser`, `images`, `tags`, `ingredients.ingredient`,
            `ratings`.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cocktail'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Cocktails
      summary: Create a new cocktail
      operationId: cbc4c3f93b89c16a916c7cc574ca118e
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '422':
          description: Request validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  '/cocktails/{id}':
    get:
      tags:
        - Cocktails
      summary: Show a specific cocktail
      operationId: 9286466f1f4b710e7f06c79f947ec7b0
      parameters:
        - name: id
          in: path
          description: Database id or slug of a resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Cocktails
      summary: Update a specific cocktail
      operationId: ca968c657169055c33bc68a1b08b6eaa
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '422':
          description: Request validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    delete:
      tags:
        - Cocktails
      summary: Delete a specific cocktail
      operationId: c642d725c11d12c781fbfad353ba7bcb
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktails/{id}/toggle-favorite':
    post:
      tags:
        - Cocktails
      summary: Toggle cocktail as favorite
      operationId: 89742b5d96b9183518a473d9e640db6e
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      is_favorited:
                        type: boolean
                        example: true
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktails/{id}/public-link':
    post:
      tags:
        - Cocktails
      summary: Create a public ID for cocktail
      operationId: 191e2ca5633e6d5f7c25430fddbbd9c8
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Cocktails
      summary: Delete cocktail public link
      operationId: a4a90713002827189fef279434f86791
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktails/{id}/share':
    get:
      tags:
        - Cocktails
      summary: Share a cocktail
      operationId: c2af4839cdc102afb67b7be674895e8c
      parameters:
        - name: id
          in: path
          description: Database id or slug of a resource
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Share format
          schema:
            type: string
            enum:
              - json
              - json-ld
              - yaml
              - yml
              - xml
              - text
              - markdown
              - md
        - name: units
          in: query
          description: Units of measurement
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - type
                      - content
                    properties:
                      type:
                        type: string
                        example: json
                      content:
                        type: string
                        example: <content in requested format>
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktails/{id}/similar':
    get:
      tags:
        - Cocktails
      summary: Show similar cocktails
      operationId: 3e08ff7e8e549570aadbaf5b727eaa2a
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktails/{id}/copy':
    post:
      tags:
        - Cocktails
      summary: Copy cocktail
      operationId: d7c826954ef1111d8a897c62e27df861
      parameters:
        - name: id
          in: path
          description: Database id or slug of a resource
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /cocktail-methods:
    get:
      tags:
        - Cocktail method
      summary: Show a list of all methods
      operationId: 14008654b6c5780b9e826e4e2fcf237a
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CocktailMethod'
                type: object
    post:
      tags:
        - Cocktail method
      summary: Create a new method
      operationId: 4b70b5048cbee429f002bf3f270c8a94
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailMethodRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CocktailMethod'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktail-methods/{id}':
    get:
      tags:
        - Cocktail method
      summary: Show a single method
      operationId: f1714d10fa6232a1cc65c88929b26bb8
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CocktailMethod'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Cocktail method
      summary: Update a specific method
      operationId: 7507b8dac0ec7199fc2c229a2c127a4e
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailMethodRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CocktailMethod'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Cocktail method
      summary: Delete specific method
      operationId: 42b0ceafc9fa786c4984ff1508868ec3
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /collections:
    get:
      tags:
        - Collections
      summary: Show a list of collections
      operationId: 308d0156539f4be8f650f7ed64ed3d7f
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: filter
          in: query
          description: Filter by attributes
          style: deepObject
          explode: true
          schema:
            properties:
              id:
                type: integer
              name:
                type: string
              cocktail_id:
                type: string
            type: object
        - name: include
          in: query
          description: 'Include additional relationships. Available relations: `cocktails`.'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sort by attributes. Available attributes: `name`, `created_at`.'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Collection'
                type: object
    post:
      tags:
        - Collections
      summary: Create a new collection
      operationId: a2c6fd135d182cbeeadbc042b35b0a80
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Collection'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/bars/{id}/collections':
    get:
      tags:
        - Collections
      summary: List bar shared collections
      operationId: a15fa7e1679d8b4eafed56112a63da76
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Collection'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/collections/{id}':
    get:
      tags:
        - Collections
      summary: Show a specific collection
      operationId: 621b31f704cec7566d650351f0907df6
      parameters:
        - name: id
          in: path
          description: Database id or slug of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Collection'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Collections
      summary: Update a specific collection
      operationId: 7497163b1fe8e97bae47a3904200722a
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Collection'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Collections
      summary: Delete a specific collection
      operationId: 00390f2c5b043adc54cc72165bc3eccb
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/collections/{id}/cocktails':
    put:
      tags:
        - Collections
      summary: Sync cocktails in a collection
      description: >-
        Used to updated/add/delete cocktails in a collection. To delete all
        cocktails pass an empty array.
      operationId: 934e63129e4bf90dd91eccc108f51f40
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                cocktails:
                  type: array
                  items:
                    type: integer
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Collection'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/explore/cocktails/{public_id}':
    get:
      tags:
        - Explore
      summary: Show a public cocktail
      operationId: 83841be3da52f7694d8382c5f5b13d8e
      parameters:
        - name: public_id
          in: path
          description: Public cocktail id
          required: true
          schema:
            type: string
            format: ulid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/CocktailExplore'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
      security: []
  /exports:
    get:
      tags:
        - Exports
      summary: Show a list of exports
      operationId: 5bc2aea6bb7fb81d2a426faccbb4b4d7
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Export'
                type: object
    post:
      tags:
        - Exports
      summary: Create a new export
      operationId: 1bedc78fd0edd24fdcc408977166e8cb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Export'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/exports/{id}':
    delete:
      tags:
        - Exports
      summary: Delete export
      operationId: 6566cf7c2310f6d0f77d6be65bb36868
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/exports/{id}/download':
    get:
      tags:
        - Exports
      summary: Download export
      operationId: df14ed9175061d3560c934ca7c89b47a
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: t
          in: query
          description: Token
          required: true
          schema:
            type: string
        - name: e
          in: query
          description: Timestamp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/octet-stream:
              example: binary
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
      security: []
    post:
      tags:
        - Exports
      summary: Generate download link
      description: >-
        Generates a publicly accessible download link for the export. The link
        will be valid for 1 minute by default.
      operationId: 48e1c2637c22de5ec50f90272526b454
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/FileDownloadLink'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /glasses:
    get:
      tags:
        - Glasses
      summary: Show a list of glass types
      operationId: aa68a5da541be756aa65f07353e63cdf
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: filter
          in: query
          description: Filter by attributes
          style: deepObject
          explode: true
          schema:
            properties:
              name:
                type: string
            type: object
        - name: sort
          in: query
          description: 'Sort by attributes. Available attributes: `name`, `created_at`.'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Glass'
                type: object
    post:
      tags:
        - Glasses
      summary: Create a new glass
      operationId: b81ce1bc5d5988d9221774a715a90950
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlassRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Glass'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/glasses/{id}':
    get:
      tags:
        - Glasses
      summary: Show glass
      operationId: aca8ea95b45a17cfe2a0442cde2f53ad
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Glass'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Glasses
      summary: Update glass
      operationId: c9c1cb0561aa1222cc78654eaceb9a62
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlassRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Glass'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Glasses
      summary: Delete glass
      operationId: 876925de63d0a9bf6b8d2337661f135a
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /images:
    get:
      tags:
        - Images
      summary: List uploaded images
      description: List all images uploaded by the authenticated user
      operationId: 3ac02bbdafb65e59d8b5c6d5aaf9806d
      parameters:
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Images
      summary: Upload an image
      description: >-
        Used to upload multiple images at once. Uploaded images via this
        endpoint will not be attached to any resource. Images are converted to
        WebP format with 85% quality of the original image.
      operationId: d889115b2fa2ccddce23e39df958cc47
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - images
              properties:
                images:
                  type: array
                  items:
                    $ref: '#/components/schemas/ImageRequest'
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
                type: object
  '/images/{id}':
    get:
      tags:
        - Images
      summary: Show an image
      operationId: 02d07ad762ad36175a8b4c2cdf4eef03
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Image'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Images
      summary: Update image
      operationId: 18a765565c4f43cc01167738ab8ff7cd
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Image'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Images
      summary: Delete image
      operationId: 99a6b84660d0881a68e57435afb2e6ea
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/images/{id}/thumb':
    get:
      tags:
        - Images
      summary: Get a thumbnail of an image
      operationId: f3fac097ef10296417650431b970d7b3
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            image/jpg:
              schema:
                type: string
                format: binary
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
      security: []
  /import/cocktail:
    post:
      tags:
        - Import
      summary: Import from recipe schema
      operationId: f46bb44c14109f5d529b854e81d57150
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                source:
                  type: string
                duplicate_actions:
                  $ref: '#/components/schemas/DuplicateActionsEnum'
                  description: >-
                    How to handle duplicates. Cocktails are matched by lowercase
                    name.
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Cocktail'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /import/scrape:
    post:
      tags:
        - Import
      summary: Scrape a recipe
      description: >-
        Try to scrape a recipe from a website. Most of the well known recipe
        websites should work. Data returned is a valid JSON schema that you can
        import using import cocktail endpoint.
      operationId: 33b756be1976d85e9b0e8e734beed74f
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                source:
                  type: string
                  example: 'https://www.example.com/recipe-url'
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - schema_version
                      - schema
                      - scraper_meta
                    properties:
                      schema_version:
                        type: string
                        example: draft2
                      schema:
                        $schema: 'http://json-schema.org/draft-07/schema#'
                        $id: 'https://barassistant.app/cocktail-02.schema.json'
                        title: Cocktail recipe - Draft 02
                        description: >-
                          Schema for a cocktail recipe including detailed
                          ingredient data. Draft 02 splits ingredients and
                          recipe data.
                        type: object
                        properties:
                          recipe:
                            type: object
                            properties:
                              _id:
                                description: The unique identifier for a cocktail
                                type: string
                                format: slug
                                minLength: 1
                                examples:
                                  - margarita
                              name:
                                description: Name of the recipe
                                type: string
                                minLength: 1
                                examples:
                                  - Margarita
                              instructions:
                                description: Recipe instructions
                                type: string
                                examples:
                                  - >-
                                    Shake all ingredients with ice and strain
                                    into a chilled glass.
                              created_at:
                                description: Date of recipe
                                type:
                                  - string
                                  - 'null'
                                format: date-time
                                examples:
                                  - '2024-07-21T15:30:00Z'
                              description:
                                description: Recipe description
                                type:
                                  - string
                                  - 'null'
                                examples:
                                  - >-
                                    A refreshing blend of tequila, lime juice,
                                    and triple sec.
                              source:
                                description: >-
                                  Source of the recipe, either URL or Book
                                  referece
                                type:
                                  - string
                                  - 'null'
                                examples:
                                  - 'https://example.com/margarita-recipe'
                              garnish:
                                description: Cocktail garnish
                                type:
                                  - string
                                  - 'null'
                                examples:
                                  - Lime wheel
                              abv:
                                description: Total ABV of made cocktail
                                type:
                                  - number
                                  - 'null'
                                minimum: 0
                                examples:
                                  - 12.5
                              tags:
                                description: Short keywords to describe cocktail
                                type: array
                                uniqueItems: true
                                items:
                                  type: string
                                examples:
                                  - - refreshing
                                    - citrus
                                    - classic
                              glass:
                                description: Glass type
                                type:
                                  - string
                                  - 'null'
                                examples:
                                  - Coupe
                              method:
                                description: Cocktail method
                                type:
                                  - string
                                  - 'null'
                                examples:
                                  - Shake
                              utensils:
                                description: Required utensils
                                type: array
                                uniqueItems: true
                                items:
                                  type: string
                                examples:
                                  - - Shaker
                                    - Strainer
                              images:
                                description: List of cocktail images
                                type: array
                                items:
                                  type: object
                                  title: Image
                                  properties:
                                    uri:
                                      type: string
                                      format: uri
                                      examples:
                                        - 'https://example.com/image.jpg'
                                        - /path/to/image.png
                                    sort:
                                      description: Control the representation of the image
                                      type: number
                                      minimum: 0
                                    placeholder_hash:
                                      description: >-
                                        Computed placeholder hash, like
                                        thumbhash, blurhash and similar
                                      type:
                                        - string
                                        - 'null'
                                    copyright:
                                      description: Image copyright information
                                      type: string
                                      examples:
                                        - © 2024 Bar Assistant
                                  required:
                                    - uri
                                    - copyright
                              ingredients:
                                description: List of cocktail ingredients and substitutes
                                type: array
                                items:
                                  type: object
                                  title: Cocktail ingredient
                                  properties:
                                    _id:
                                      description: >-
                                        The unique reference for an ingredient
                                        from `ingredients` property
                                      type: string
                                      minLength: 1
                                      examples:
                                        - tequila
                                    amount:
                                      description: Amount of the ingredient
                                      type: number
                                      minimum: 0
                                      maximum: 99999
                                      examples:
                                        - 50
                                    units:
                                      description: Units for the amount
                                      type: string
                                      minLength: 1
                                      examples:
                                        - ml
                                    optional:
                                      description: Indicates if the ingredient is optional
                                      type: boolean
                                      examples:
                                        - false
                                    amount_max:
                                      description: Maximum amount of the ingredient
                                      type:
                                        - number
                                        - 'null'
                                      minimum: 0
                                      maximum: 99999
                                      examples:
                                        - 60
                                    note:
                                      description: >-
                                        Additional note related to the cocktail
                                        ingredient
                                      type:
                                        - string
                                        - 'null'
                                      examples:
                                        - Preferebly blanco
                                    substitutes:
                                      type: array
                                      items:
                                        type: object
                                        title: Cocktail ingredient substitute
                                        properties:
                                          _id:
                                            description: >-
                                              The unique reference for an ingredient
                                              from `ingredients` property
                                            type: string
                                            minLength: 1
                                            examples:
                                              - mezcal
                                          amount:
                                            description: Amount of the substitute ingredient
                                            type:
                                              - number
                                              - 'null'
                                            examples:
                                              - 50
                                          units:
                                            description: Units for the amount
                                            type:
                                              - string
                                              - 'null'
                                            examples:
                                              - ml
                                          amount_max:
                                            description: >-
                                              Maximum amount of the substitute
                                              ingredient
                                            type:
                                              - number
                                              - 'null'
                                            examples:
                                              - 60
                                        required:
                                          - _id
                                    sort:
                                      description: Sort order for the ingredient
                                      type: number
                                      minimum: 0
                                  required:
                                    - _id
                                    - amount
                                    - units
                            required:
                              - _id
                              - name
                              - instructions
                          ingredients:
                            type: array
                            description: List of ingredients
                            items:
                              type: object
                              title: Ingredient
                              properties:
                                _id:
                                  description: >-
                                    The unique identifier for an ingredient,
                                    used as a refrence in cocktail ingredient
                                    list
                                  type: string
                                  minLength: 1
                                  examples:
                                    - tequila
                                name:
                                  type: string
                                  minLength: 1
                                  examples:
                                    - Tequila
                                strength:
                                  description: Ingredient ABV
                                  type:
                                    - number
                                    - 'null'
                                  minimum: 0
                                  examples:
                                    - 40
                                description:
                                  description: Additional ingredient information
                                  type:
                                    - string
                                    - 'null'
                                  examples:
                                    - >-
                                      A Mexican spirit made from the blue agave
                                      plant.
                                origin:
                                  description: Ingredient origin
                                  type:
                                    - string
                                    - 'null'
                                  examples:
                                    - Mexico
                                category:
                                  description: Category ingredient belongs to
                                  type:
                                    - string
                                    - 'null'
                                  examples:
                                    - Spirit
                              required:
                                - _id
                                - name
                        required:
                          - recipe
                          - ingredients
                      scraper_meta:
                        type: array
                        items:
                          required:
                            - _id
                            - source
                          properties:
                            _id:
                              type: string
                            source:
                              type: string
                          type: object
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /ingredient-categories:
    get:
      tags:
        - Ingredient category
      summary: Show a list of ingredient categories
      operationId: 9c5a332d2fd9a695a6805451249a0c28
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IngredientCategory'
                type: object
    post:
      tags:
        - Ingredient category
      summary: Create a new ingredient category
      operationId: beef561152a333f7c81fec58a7590f37
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientCategoryRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/IngredientCategory'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/ingredient-categories/{id}':
    get:
      tags:
        - Ingredient category
      summary: Show ingredient category
      operationId: cca43ededebdf742491f0f8eb0dcfab5
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/IngredientCategory'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Ingredient category
      summary: Update ingredient category
      operationId: bdd96c56bc078a0dbdbc9cb71b1bd503
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientCategoryRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/IngredientCategory'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Ingredient category
      summary: Delete ingredient category
      operationId: 5190ba80efae47305bdbcf1a68de6fd7
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /ingredients:
    get:
      tags:
        - Ingredients
      summary: Show a list of ingredients
      operationId: 1638cf5bb5113e3ca4793347b9ca84ed
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
        - name: filter
          in: query
          description: Filter by attributes
          style: deepObject
          explode: true
          schema:
            properties:
              id:
                type: integer
              name:
                type: string
              name_exact:
                type: string
              category_id:
                type: integer
              origin:
                type: string
              created_user_id:
                type: integer
              on_shopping_list:
                type: boolean
              on_shelf:
                type: boolean
              strength_min:
                type: number
                format: float
              strength_max:
                type: number
                format: float
              main_ingredients:
                type: string
              complex:
                type: boolean
            type: object
        - name: sort
          in: query
          description: >-
            Sort by attributes. Available attributes: `name`, `created_at`,
            `strength`, `total_cocktails`.
          schema:
            type: string
        - name: include
          in: query
          description: >-
            Include additional relationships. Available relations:
            `parentIngredient`, `varieties`, `prices`, `ingredientParts`,
            `category`, `images`.
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ingredient'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Ingredients
      summary: Create an ingredient
      operationId: efa43043e488624a2f3d8e8123a2d9be
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Ingredient'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/ingredients/{id}':
    get:
      tags:
        - Ingredients
      summary: Show an ingredient
      operationId: 0ede5ee7aaed9fd2c985386b7a13e005
      parameters:
        - name: id
          in: path
          description: Database id or slug of a resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Ingredient'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Ingredients
      summary: Update an ingredient
      operationId: f9433e9c103e95ceebcf99171a11e81d
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Ingredient'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Ingredients
      summary: Delete an ingredient
      operationId: 31e064558b854ed32ba5f29a76aee385
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/ingredients/{id}/extra':
    get:
      tags:
        - Ingredients
      summary: Extra cocktails you can make if you add this ingredient to your shelf
      operationId: ff324ec47870a7091f125afea3f7e664
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CocktailBasic'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/ingredients/{id}/cocktails':
    get:
      tags:
        - Ingredients
      summary: List of cocktails that use this ingredient
      operationId: aba5fae0baf2ce1fc02a691412c8a6ab
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CocktailBasic'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/ingredients/{id}/substitutes':
    get:
      tags:
        - Ingredients
      summary: List ingredient substitutes
      description: >-
        Show a list of ingredients that are used as a substitute for this
        ingredient in cocktail recipes.
      operationId: fccb6b72c41f8a78ab604bc86a879c27
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IngredientBasic'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /menu:
    get:
      tags:
        - Menu
      summary: Show menu
      operationId: 15005db445c5ccad445e198729cc4e22
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Menu'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Menu
      summary: Update menu
      operationId: 9ac6e03b541a1351a5d691b2aa232283
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Menu'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/explore/menus/{slug}':
    get:
      tags:
        - Explore
      summary: Show public bar menu
      operationId: c2dee2186390212153a41c0527ddb728
      parameters:
        - name: slug
          in: path
          description: Bar database slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/MenuExplore'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
      security: []
  /notes:
    get:
      tags:
        - Notes
      summary: Show a list of all notes
      operationId: 8b1d23cbbf81842599e3e9463477cb58
      parameters:
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
    post:
      tags:
        - Notes
      summary: Create a new note
      operationId: a0c90a217efa521e80b3b94c1a4bf3a7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Note'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/notes/{id}':
    get:
      tags:
        - Notes
      summary: Show a single note
      operationId: c46ec527098402aba4a10b074a7b4047
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Note'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Notes
      summary: Delete a specific note
      operationId: 075f33453cc8e1e0d26bd8f07b2c5d59
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /tokens:
    get:
      tags:
        - Tokens
      summary: Show a list of tokens
      operationId: 68b9d61d5bd7070a04356cf10d75f151
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersonalAccessToken'
                type: object
    post:
      tags:
        - Tokens
      summary: Create new personal access token
      operationId: d91a0f74be09f52fd56164e7c58e7795
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalAccessTokenRequest'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Token'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/tokens/{id}':
    delete:
      tags:
        - Tokens
      summary: Revoke personal access token
      operationId: e3638ffac30ab37a8015b26a88b7bad9
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /price-categories:
    get:
      tags:
        - Price category
      summary: Show a list of price categories
      operationId: 8ffdcf8e07576f57714428563d35c0ff
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceCategory'
                type: object
    post:
      tags:
        - Price category
      summary: Create a new price category
      operationId: 000ce8107dfa5fe811876785a0f24308
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceCategoryRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/PriceCategory'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/price-categories/{id}':
    get:
      tags:
        - Price category
      summary: Show a price category
      operationId: 10017aa4f043f641c210bafc56092997
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/PriceCategory'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Price category
      summary: Update price category
      operationId: 86fc70306463caa72b7bfd33553393be
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceCategoryRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/PriceCategory'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Price category
      summary: Delete price category
      operationId: 9f109b6442b874b6de95a9b1b400d1fb
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /profile:
    get:
      tags:
        - Profile
      summary: Show profile
      operationId: 73fd658c723e80f927b251628b9a616b
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Profile
      summary: Update profile
      operationId: c5958eea850b563b057d22dc8258efbf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Profile'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/cocktails/{id}/ratings':
    post:
      tags:
        - Ratings
      summary: Rate a cocktail
      operationId: c7c135615b762420f7b338e0bc744a76
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                rating:
                  type: integer
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Ratings
      summary: Delete current user's cocktail rating
      operationId: 93d095c7348ac6ee7d0f3cb8ea1f1c36
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /server/version:
    get:
      tags:
        - Server
      summary: Show server information
      operationId: 25784e4e494f0fd4dbbdb7b92c301b26
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/ServerVersion'
                type: object
      security:
        - {}
  '/users/{id}/ingredients':
    get:
      tags:
        - 'Users: Shelf'
      summary: Show a list of shelf ingredients
      description: Ingredients that user saved to their shelf
      operationId: b34236369b075eabaacef013be799024
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IngredientBasic'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
  '/users/{id}/cocktails':
    get:
      tags:
        - 'Users: Shelf'
      summary: Show a list shelf cocktails
      description: Cocktails that the user can make with ingredients on their shelf
      operationId: 5a48f072f2ca1f25807838c8ae331db5
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CocktailBasic'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
  '/users/{id}/cocktails/favorites':
    get:
      tags:
        - 'Users: Shelf'
      summary: Show a list of cocktails user has favorited
      operationId: 0038cb5730a723a0c58e5605fecb0ccb
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Set current page number
          schema:
            type: integer
        - name: per_page
          in: query
          description: Set number of results per page
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CocktailBasic'
                  links:
                    properties:
                      first:
                        type:
                          - string
                          - 'null'
                      last:
                        type:
                          - string
                          - 'null'
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                    type: object
                  meta:
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                      last_page:
                        type: integer
                      links:
                        type: array
                        items:
                          properties:
                            url:
                              type: string
                            label:
                              type: string
                            active:
                              type: boolean
                          type: object
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                      total:
                        type: integer
                    type: object
                type: object
  '/users/{id}/ingredients/batch-store':
    post:
      tags:
        - 'Users: Shelf'
      summary: Batch store ingredients to the shelf
      operationId: 28c0db334504ef005e3704dcc80154b1
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                ingredients:
                  type: array
                  items:
                    type: integer
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}/ingredients/batch-delete':
    post:
      tags:
        - 'Users: Shelf'
      summary: Delete multiple ingredients from the shelf
      operationId: 8effce422c8cbe13a9b273a71f9d8afc
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                ingredients:
                  type: array
                  items:
                    type: integer
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}/ingredients/recommend':
    get:
      tags:
        - 'Users: Shelf'
      summary: Recommend next ingredients
      operationId: f5e680e7f9f44a047888ad4bc8a22ba8
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IngredientRecommend'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}/shopping-list':
    get:
      tags:
        - 'Users: Shopping list'
      summary: Show shopping list
      operationId: ea114c1013eabd71064b7b33513d13cd
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShoppingList'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}/shopping-list/batch-store':
    post:
      tags:
        - 'Users: Shopping list'
      summary: Batch add ingredients to shopping list
      operationId: c9dbd5fceec4406656e93b94646ea5f6
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingListRequest'
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}/shopping-list/batch-delete':
    post:
      tags:
        - 'Users: Shopping list'
      summary: Batch delete ingredients from shopping list
      operationId: cec5d8ca07890aaad3cd264ba62a88bb
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                ingredients:
                  type: array
                  items:
                    properties:
                      id:
                        type: integer
                    type: object
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}/shopping-list/share':
    get:
      tags:
        - 'Users: Shopping list'
      summary: Share shopping list
      operationId: 1d4aaec85e00ac2c559f362058f02056
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: type
          in: query
          description: 'Type of share. Available types: `markdown`.'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - type
                      - content
                    properties:
                      type:
                        type: string
                        example: markdown
                      content:
                        type: string
                        example: <content in requested format>
                    type: object
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/bars/{id}/stats':
    get:
      tags:
        - Bars
      summary: Show bar stats
      operationId: d62319d3bf13005383b7d8027e9056ec
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/BarStats'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /billing/subscriptions:
    get:
      tags:
        - Billing
      summary: Get subscription status
      operationId: 5e298d4bebc46cd05931c3a15c92f248
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/UserSubscription'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    post:
      tags:
        - Billing
      summary: Update subscription
      operationId: 6b69b6aa21e0e7174a5601c02a19161e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - type
              properties:
                type:
                  type: string
              type: object
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /tags:
    get:
      tags:
        - Tag
      summary: Show a list of all tags
      operationId: e5e1e0ec136ce6b73c6636ef9635a596
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
                type: object
    post:
      tags:
        - Tag
      summary: Create a new tag
      operationId: 436ed7a7115fce5026326a5d67a016ac
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/tags/{id}':
    get:
      tags:
        - Tag
      summary: Show a single tag
      operationId: df2e47c29c59436f33f9b36e4b5f30f2
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Tag
      summary: Update tag
      operationId: 3a6faf0d586a666498d08786030214c3
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tag'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Tag
      summary: Delete tag
      operationId: 3093352bf630017b8fcf7705e9b329c4
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /users:
    get:
      tags:
        - Users
      summary: Show a list of users of a bar
      operationId: 0d0cb04fffa73faf3be78b1a0b658561
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                type: object
    post:
      tags:
        - Users
      summary: Create a new user
      operationId: a53b4f22b9e0de280870f1e187f6bee3
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/users/{id}':
    get:
      tags:
        - Users
      summary: Show a user
      operationId: 89cd377bbebe14aaf4174e3916502852
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Users
      summary: Update a user
      operationId: 6972a68618aa96af50377dcc8fe79aef
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Users
      summary: Delete a user
      operationId: 0c7e7a133a818ac4b30f2d7dd1b04b91
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  /utensils:
    get:
      tags:
        - Utensils
      summary: Show a list of utensils
      operationId: 613e6e2fed96a23278a5036159e9087d
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Utensil'
                type: object
    post:
      tags:
        - Utensils
      summary: Create a new utensil
      operationId: eef2f70636f45820b56cc0025448f847
      parameters:
        - name: bar_id
          in: query
          description: >-
            Database id of a bar. Required if you are not using
            `Bar-Assistant-Bar-Id` header.
          required: false
          schema:
            type: integer
        - name: Bar-Assistant-Bar-Id
          in: header
          description: >-
            Database id of a bar. Required if you are not using `bar_id` query
            string.
          required: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtensilRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: URL of the new resource
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Utensil'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
  '/utensils/{id}':
    get:
      tags:
        - Utensils
      summary: Show utensil
      operationId: 1b9d7fe5ecf4a0271c20ba17654d209a
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Utensil'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    put:
      tags:
        - Utensils
      summary: Update a specific utensil
      operationId: 0688a6a8648cdad35503bad732bba86f
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtensilRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Utensil'
                type: object
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
    delete:
      tags:
        - Utensils
      summary: Delete specific utensil
      operationId: 2f216f7ba27dd48b73ea157501c8bc81
      parameters:
        - name: id
          in: path
          description: Database id of a resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful response
        '403':
          description: You are not authorized for this action.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
        '404':
          description: Resource record not found.
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/APIError'
                type: object
components:
  schemas:
    BarOptionsEnum:
      type: string
      enum:
        - ingredients
        - cocktails
    ExportTypeEnum:
      type: string
      enum:
        - datapack
        - schema
        - md
        - json-ld
        - xml
        - yaml
    ForceUnitConvertEnum:
      type: string
      enum:
        - none
        - ml
        - oz
        - cl
    DuplicateActionsEnum:
      type: string
      enum:
        - none
        - skip
        - overwrite
    AbilityEnum:
      type: string
      enum:
        - cocktails.read
        - cocktails.write
        - ingredients.read
        - ingredients.write
    BarStatusEnum:
      type: string
      enum:
        - provisioning
        - active
        - deactivated
    APIError:
      required:
        - type
        - message
      properties:
        type:
          type: string
          example: api_error
        message:
          type: string
          example: Resource record not found.
      type: object
    Bar:
      required:
        - id
        - slug
        - name
        - subtitle
        - description
        - status
        - access
        - invite_code
        - active
        - settings
        - search_host
        - search_token
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: bar-name-1
        name:
          type: string
          example: Bar name
        subtitle:
          type:
            - string
            - 'null'
          example: A short subtitle of a bar
        description:
          type:
            - string
            - 'null'
          example: Bar description
        invite_code:
          type:
            - string
            - 'null'
          example: 01H8S3VH2HTEB3D893AW8NTBBC
        status:
          $ref: '#/components/schemas/BarStatusEnum'
        settings:
          type: array
          items:
            type: object
            additionalProperties: true
        search_host:
          type:
            - string
            - 'null'
        search_token:
          type:
            - string
            - 'null'
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
        created_user:
          $ref: '#/components/schemas/UserBasic'
        updated_user:
          oneOf:
            - $ref: '#/components/schemas/UserBasic'
            - type: 'null'
        access:
          type: array
          items:
            properties:
              role_id:
                type: integer
                example: 1
              can_edit:
                type: boolean
                example: true
              can_delete:
                type: boolean
                example: true
              can_activate:
                type: boolean
                example: true
              can_deactivate:
                type: boolean
                example: true
            type: object
      type: object
    BarBasic:
      required:
        - id
        - slug
        - name
        - subtitle
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: bar-name-1
        name:
          type: string
          example: Bar name
        subtitle:
          type: string
          example: Bar subtitle
      type: object
    BarMembership:
      required:
        - user_id
        - user_name
        - bar_id
        - is_shelf_public
        - use_parent_as_substitute
      properties:
        user_id:
          type: integer
          example: 1
        user_name:
          type: string
          example: Bartender
        bar_id:
          type: integer
          example: 1
        is_shelf_public:
          type: boolean
          example: true
        use_parent_as_substitute:
          type: boolean
          example: true
      type: object
    BarRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Bar name
        subtitle:
          type:
            - string
            - 'null'
          example: A short subtitle of a bar
        description:
          type:
            - string
            - 'null'
          example: Bar description
        slug:
          type: string
          example: bar-name-1
        default_units:
          description: Used only as a setting for client apps.
          type: string
          enum:
            - ml
            - cl
            - oz
          example: ml
        default_lang:
          description: >-
            Locale code, used only as a setting for client apps, does not change
            language of the API.
          type:
            - string
            - 'null'
          example: en-US
        enable_invites:
          description: Enable users with invite code to join this bar. Default `false`.
          type: boolean
        options:
          description: >-
            List of data that the bar will start with. Cocktails cannot be
            imported without ingredients.
          type: array
          items:
            $ref: '#/components/schemas/BarOptionsEnum'
      type: object
    BarStats:
      required:
        - total_cocktails
        - total_ingredients
        - total_favorited_cocktails
        - total_shelf_cocktails
        - total_shelf_ingredients
        - total_bar_members
        - total_collections
        - favorite_tags
        - your_top_ingredients
        - most_popular_ingredients
        - top_rated_cocktails
      properties:
        total_cocktails:
          type: integer
          example: 1
        total_ingredients:
          type: integer
          example: 1
        total_favorited_cocktails:
          type: integer
          example: 1
        total_shelf_cocktails:
          type: integer
          example: 1
        total_shelf_ingredients:
          type: integer
          example: 1
        total_bar_members:
          type: integer
          example: 1
        total_collections:
          type: integer
          example: 1
        favorite_tags:
          type: array
          items:
            required:
              - id
              - name
              - cocktails_count
            properties:
              id:
                type: integer
                example: 31
              name:
                type: string
                example: Tag name
              cocktails_count:
                type: integer
                example: 12
            type: object
        your_top_ingredients:
          type: array
          items:
            required:
              - id
              - slug
              - name
              - cocktails_count
            properties:
              id:
                type: integer
                example: 1
              slug:
                type: string
                example: gin
              name:
                type: string
                example: Gin
              cocktails_count:
                type: integer
                example: 1
            type: object
        most_popular_ingredients:
          type: array
          items:
            required:
              - id
              - slug
              - name
              - cocktails_count
            properties:
              id:
                type: integer
                example: 1
              slug:
                type: string
                example: gin
              name:
                type: string
                example: Gin
              cocktails_count:
                type: integer
                example: 1
            type: object
        top_rated_cocktails:
          type: array
          items:
            required:
              - id
              - slug
              - name
              - avg_rating
              - votes
            properties:
              id:
                type: integer
                example: 1
              slug:
                type: string
                example: old-fashioned
              name:
                type: string
                example: Old Fashioned
              avg_rating:
                type: integer
                example: 3
              votes:
                type: integer
                example: 42
            type: object
      type: object
    Cocktail:
      required:
        - id
        - name
        - slug
        - garnish
        - description
        - instructions
        - source
        - public_id
        - public_at
        - created_at
        - updated_at
        - abv
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Cocktail name
        slug:
          type: string
          example: cocktail-name-1
        instructions:
          type: string
          example: Step by step instructions
        garnish:
          type:
            - string
            - 'null'
          example: Garnish
        description:
          type:
            - string
            - 'null'
          example: Cocktail description
        source:
          type:
            - string
            - 'null'
          example: Source of the recipe
        public_id:
          type:
            - string
            - 'null'
          example: public-id-1
        public_at:
          type:
            - string
            - 'null'
          format: date-time
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        tags:
          type: array
          items:
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Tag name
            type: object
        rating:
          required:
            - user
            - average
            - total_votes
          properties:
            user:
              description: Current user's rating
              type:
                - integer
                - 'null'
              example: 1
            average:
              description: Average rating
              type: integer
              example: 4
            total_votes:
              type: integer
              example: 12
          type: object
        glass:
          oneOf:
            - $ref: '#/components/schemas/Glass'
            - type: 'null'
        utensils:
          type: array
          items:
            $ref: '#/components/schemas/Utensil'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/CocktailIngredient'
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
        method:
          oneOf:
            - $ref: '#/components/schemas/CocktailMethod'
            - type: 'null'
        abv:
          type:
            - number
            - 'null'
          format: float
          example: 40
        volume_ml:
          type:
            - number
            - 'null'
          format: float
          example: 67.5
        alcohol_units:
          type:
            - number
            - 'null'
          format: float
          example: 25.5
        calories:
          type:
            - integer
            - 'null'
          example: 350
        created_user:
          $ref: '#/components/schemas/UserBasic'
        updated_user:
          $ref: '#/components/schemas/UserBasic'
          nullable: true
        in_shelf:
          type: boolean
        access:
          required:
            - can_edit
            - can_delete
            - can_rate
            - can_add_note
          properties:
            can_edit:
              type: boolean
              example: true
            can_delete:
              type: boolean
              example: true
            can_rate:
              type: boolean
              example: true
            can_add_note:
              type: boolean
              example: true
          type: object
        navigation:
          required:
            - prev
            - next
          properties:
            prev:
              type:
                - string
                - 'null'
              example: old-fashioned-1
            next:
              type:
                - string
                - 'null'
              example: tom-collins-1
          type: object
      type: object
    CocktailBasic:
      description: Minimal cocktail information
      required:
        - id
        - slug
        - name
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: old-fashioned-1
        name:
          type: string
          example: Old fashioned
      type: object
    CocktailExplore:
      properties:
        bar:
          $ref: '#/components/schemas/BarBasic'
        name:
          type: string
          example: Cocktail name
        instructions:
          type: string
          example: Step by step instructions
        garnish:
          type:
            - string
            - 'null'
          example: Garnish
        description:
          type:
            - string
            - 'null'
          example: Cocktail description
        source:
          type:
            - string
            - 'null'
          example: Source of the recipe
        images:
          type: array
          items:
            properties:
              sort:
                type: integer
                example: 1
              placeholder_hash:
                type: string
                example: a1b2c3d4e5f6g7h8i9j0
              url:
                type: string
                example: 'https://example.com/image.jpg'
              copyright:
                type: string
                example: Image copyright
            type: object
        tags:
          type: array
          items:
            type: string
        glass:
          type:
            - string
            - 'null'
        utensils:
          type: array
          items:
            type: string
        ingredients:
          type: array
          items:
            properties:
              name:
                type: string
                example: Ingredient name
              amount:
                type: number
                example: 30
              amount_max:
                type:
                  - number
                  - 'null'
                example: 45
              units:
                type: string
                example: ml
              optional:
                type: boolean
                example: true
              note:
                type:
                  - string
                  - 'null'
                example: Ingredient note
              substitutes:
                type: array
                items:
                  properties:
                    name:
                      type: string
                      example: Ingredient name
                    amount:
                      type:
                        - number
                        - 'null'
                      example: 30
                    amount_max:
                      type:
                        - number
                        - 'null'
                      example: 45
                    units:
                      type:
                        - string
                        - 'null'
                      example: ml
                  type: object
            type: object
        method:
          type:
            - string
            - 'null'
        abv:
          type:
            - number
            - 'null'
          format: float
          example: 40
      type: object
    CocktailIngredient:
      required:
        - ingredient
        - sort
        - amount
        - units
        - formatted
      properties:
        ingredient:
          $ref: '#/components/schemas/IngredientBasic'
        sort:
          type: integer
          example: 0
        amount:
          type: number
          format: float
          example: 30
        amount_max:
          type:
            - number
            - 'null'
          format: float
          example: 60
        units:
          type: string
          example: ml
        optional:
          type: boolean
          example: false
        substitutes:
          type: array
          items:
            $ref: '#/components/schemas/CocktailIngredientSubstitute'
        note:
          type:
            - string
            - 'null'
          example: Additional notes
        formatted:
          description: 'Amounts in different units, converted if possible'
          required:
            - ml
            - oz
            - cl
          properties:
            ml:
              required:
                - amount
                - amount_max
                - units
                - full_text
              properties:
                amount:
                  type: number
                  format: float
                  example: 30
                amount_max:
                  type: number
                  format: float
                  example: 60
                units:
                  type: string
                  example: ml
                full_text:
                  type: string
                  example: 30-60 ml
              type: object
            oz:
              required:
                - amount
                - amount_max
                - units
                - full_text
              properties:
                amount:
                  type: number
                  format: float
                  example: 1
                amount_max:
                  type: number
                  format: float
                  example: 2
                units:
                  type: string
                  example: oz
                full_text:
                  type: string
                  example: 1-2 oz
              type: object
            cl:
              required:
                - amount
                - amount_max
                - units
                - full_text
              properties:
                amount:
                  type: number
                  format: float
                  example: 3
                amount_max:
                  type: number
                  format: float
                  example: 6
                units:
                  type: string
                  example: cl
                full_text:
                  type: string
                  example: 3-6 cl
              type: object
          type: object
          additionalProperties: true
        in_shelf:
          type: boolean
          example: true
        in_shelf_as_substitute:
          type: boolean
          example: true
        in_shelf_as_complex_ingredient:
          type: boolean
          example: true
      type: object
    CocktailIngredientRequest:
      required:
        - ingredient_id
        - amount
        - units
      properties:
        ingredient_id:
          type: integer
        name:
          type:
            - string
            - 'null'
        amount:
          type: number
          format: float
          example: 30
        units:
          type: string
          example: ml
        sort:
          type: integer
        optional:
          type: boolean
        substitutes:
          type: array
          items:
            $ref: '#/components/schemas/CocktailIngredientSubstituteRequest'
        amount_max:
          type:
            - number
            - 'null'
          format: float
          example: 60
        note:
          type:
            - string
            - 'null'
      type: object
    CocktailIngredientSubstitute:
      required:
        - ingredient
        - amount
        - amount_max
        - units
        - in_shelf
      properties:
        ingredient:
          $ref: '#/components/schemas/IngredientBasic'
        amount:
          type:
            - number
            - 'null'
          format: float
          example: 30
        amount_max:
          type:
            - number
            - 'null'
          format: float
          example: 60
        units:
          type:
            - string
            - 'null'
          example: ml
        in_shelf:
          type: boolean
          example: true
      type: object
    CocktailIngredientSubstituteRequest:
      required:
        - ingredient_id
      properties:
        ingredient_id:
          type: integer
        amount:
          type:
            - number
            - 'null'
          format: float
          example: 30
        amount_max:
          type:
            - number
            - 'null'
          format: float
          example: 60
        units:
          type:
            - string
            - 'null'
          example: ml
      type: object
    CocktailMethod:
      required:
        - id
        - name
        - dilution_percentage
        - cocktails_count
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Shake
        dilution_percentage:
          type: integer
          example: 20
        cocktails_count:
          type: integer
          example: 32
      type: object
    CocktailMethodRequest:
      required:
        - name
        - dilution_percentage
      properties:
        name:
          type: string
          example: Shake
        dilution_percentage:
          type: integer
          example: 20
      type: object
    CocktailRequest:
      required:
        - name
        - instructions
      properties:
        name:
          type: string
          example: Cocktail name
        instructions:
          type: string
          example: Step by step instructions
        description:
          type:
            - string
            - 'null'
          example: Cocktail description
        source:
          type:
            - string
            - 'null'
          example: Source of the recipe
        garnish:
          type:
            - string
            - 'null'
          example: Garnish
        glass_id:
          type:
            - integer
            - 'null'
          example: 1
        method_id:
          type:
            - integer
            - 'null'
          example: 1
        tags:
          type: array
          items:
            type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/CocktailIngredientRequest'
        images:
          description: List of existing image ids
          type: array
          items:
            type: integer
        utensils:
          description: List of existing utensil ids
          type: array
          items:
            type: integer
      type: object
    Collection:
      required:
        - id
        - name
        - description
        - is_bar_shared
        - created_at
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Collection name
        description:
          type:
            - string
            - 'null'
          example: Collection description
        is_bar_shared:
          type: boolean
        created_at:
          type: string
          format: date-time
          example: '2023-05-14T21:23:40.000000Z'
        created_user:
          $ref: '#/components/schemas/UserBasic'
        cocktails:
          type: array
          items:
            $ref: '#/components/schemas/CocktailBasic'
      type: object
    CollectionRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Collection name
        description:
          type:
            - string
            - 'null'
          example: Collection description
        is_bar_shared:
          type: boolean
        cocktails:
          type: array
          items:
            type: integer
      type: object
    Export:
      properties:
        id:
          type: integer
          example: 1
        filename:
          type: string
          example: cocktails.csv
        created_at:
          type: string
          format: date-time
          example: '2023-05-14T21:23:40.000000Z'
        bar_name:
          type: string
          example: Bar name
        is_done:
          type: boolean
          example: true
      type: object
    ExportRequest:
      properties:
        type:
          $ref: '#/components/schemas/ExportTypeEnum'
        units:
          $ref: '#/components/schemas/ForceUnitConvertEnum'
        bar_id:
          type: integer
      type: object
    FileDownloadLink:
      properties:
        url:
          description: Absolute URL to download the export
          type: string
          example: >-
            http://example.com/api/exports/29/download?t=2053f2e716f2dcddc0a2b767249235750e549af6d459cb1c65d4720e72404d88&e=1723480826
        token:
          type: string
          example: 2053f2e716f2dcddc0a2b767249235750e549af6d459cb1c65d4720e72404d88
        expires:
          type: string
          example: '2024-08-12T16:40:26+00:00'
      type: object
    Glass:
      required:
        - id
        - name
        - description
        - cocktails_count
        - volume
        - volume_units
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Lowball
        description:
          type:
            - string
            - 'null'
          example: Glass for smaller cocktails
        cocktails_count:
          type: integer
          example: 32
        volume:
          type:
            - number
            - 'null'
          format: float
          example: 120
        volume_units:
          type:
            - string
            - 'null'
          example: ml
      type: object
    GlassRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Lowball
        description:
          type:
            - string
            - 'null'
          example: Glass for smaller cocktails
        volume:
          type:
            - number
            - 'null'
          format: float
          example: 120
        volume_units:
          type:
            - string
            - 'null'
          example: ml
      type: object
    Image:
      description: Image attached to a specific resource
      required:
        - id
        - file_path
        - url
        - copyright
        - sort
        - placeholder_hash
      properties:
        id:
          type: integer
          example: 1
        file_path:
          type: string
          example: cocktails/1/image.jpg
        url:
          type: string
          example: 'http://example.com/uploads/cocktails/1/image.jpg'
        copyright:
          type:
            - string
            - 'null'
          example: Image copyright
        sort:
          type: integer
          example: 1
        placeholder_hash:
          type:
            - string
            - 'null'
          example: 1QcSHQRnh493V4dIh4eXh1h4kJUI
      type: object
    ImageRequest:
      required:
        - image
        - sort
      properties:
        image:
          description: Image file. Base64 encoded images also supported. Max 50MB
          type:
            - string
            - 'null'
          format: binary
        id:
          description: 'Existing image id, used to update an existing image'
          type:
            - integer
            - 'null'
        sort:
          type: integer
          example: 1
        copyright:
          type:
            - string
            - 'null'
          example: Image copyright
      type: object
    Ingredient:
      required:
        - id
        - slug
        - name
        - description
        - origin
        - color
        - created_at
        - updated_at
        - strength
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: gin-1
        name:
          type: string
          example: Gin
        strength:
          type: number
          format: float
          example: 40
        description:
          type:
            - string
            - 'null'
          example: Gin is a type of alcoholic spirit
        origin:
          type:
            - string
            - 'null'
          example: Worldwide
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        parent_ingredient:
          oneOf:
            - $ref: '#/components/schemas/IngredientBasic'
            - type: 'null'
        color:
          type: string
          example: '#ffffff'
        category:
          oneOf:
            - $ref: '#/components/schemas/IngredientCategory'
            - type: 'null'
        cocktails_count:
          type: integer
          example: 12
        varieties:
          type: array
          items:
            $ref: '#/components/schemas/IngredientBasic'
        cocktails:
          type: array
          items:
            properties:
              id:
                type: integer
                example: 1
              slug:
                type: string
                example: old-fashioned-1
              name:
                type: string
                example: Old fashioned
            type: object
        created_user:
          $ref: '#/components/schemas/UserBasic'
        updated_user:
          oneOf:
            - $ref: '#/components/schemas/UserBasic'
            - type: 'null'
        access:
          type: array
          items:
            properties:
              can_edit:
                type: boolean
                example: true
              can_delete:
                type: boolean
                example: true
            type: object
        ingredient_parts:
          type: array
          items:
            $ref: '#/components/schemas/IngredientBasic'
        prices:
          type: array
          items:
            $ref: '#/components/schemas/IngredientPrice'
      type: object
    IngredientBasic:
      description: Minimal ingredient information
      required:
        - id
        - slug
        - name
      properties:
        id:
          type: integer
          example: 1
        slug:
          type: string
          example: gin-1
        name:
          type: string
          example: Gin
      type: object
    IngredientCategory:
      required:
        - id
        - name
        - description
        - ingredients_count
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Spirits
        description:
          type:
            - string
            - 'null'
          example: Category of base spirits
        ingredients_count:
          type: integer
          example: 32
      type: object
    IngredientCategoryRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Spirits
        description:
          type:
            - string
            - 'null'
          example: Category of base spirits
      type: object
    IngredientPrice:
      required:
        - price_category
        - price
        - amount
        - units
        - description
        - created_at
        - updated_at
      properties:
        price_category:
          $ref: '#/components/schemas/PriceCategory'
        price:
          $ref: '#/components/schemas/Price'
        amount:
          type: number
          format: float
          example: 30
        units:
          type: string
          example: ml
        description:
          type:
            - string
            - 'null'
          example: Updated price
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
      type: object
    IngredientPriceRequest:
      required:
        - price_category_id
        - price
        - amount
        - units
      properties:
        price_category_id:
          type: integer
        price:
          type: integer
        amount:
          type: number
          format: float
        units:
          type: string
        description:
          type:
            - string
            - 'null'
      type: object
    IngredientRecommend:
      description: Ingredient recommendation with number of potential cocktails
      type: object
      allOf:
        - $ref: '#/components/schemas/IngredientBasic'
        - properties:
            potential_cocktails:
              type: integer
              example: 10
          type: object
    IngredientRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Gin
        ingredient_category_id:
          type:
            - integer
            - 'null'
          example: 1
        strength:
          type: number
          format: float
          example: 40
        description:
          type:
            - string
            - 'null'
          example: Gin is a type of alcoholic spirit
        origin:
          type:
            - string
            - 'null'
          example: Worldwide
        color:
          type:
            - string
            - 'null'
          example: '#ffffff'
        parent_ingredient_id:
          type:
            - integer
            - 'null'
          example: 1
        images:
          description: Existing image ids
          type: array
          items:
            type: integer
        complex_ingredient_part_ids:
          description: Existing ingredient ids
          type: array
          items:
            type: integer
        prices:
          type: array
          items:
            $ref: '#/components/schemas/IngredientPriceRequest'
      type: object
    LoginRequest:
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: admin@example.com
        password:
          type: string
          format: password
          example: password
        token_name:
          type:
            - string
            - 'null'
          example: My device
      type: object
    Menu:
      properties:
        id:
          type: integer
          example: 1
        is_enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
        categories:
          type: array
          items:
            properties:
              name:
                type: string
                example: Category name
              cocktails:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: 1
                    slug:
                      type: string
                      example: cocktail-name-1
                    sort:
                      type: integer
                      example: 1
                    price:
                      $ref: '#/components/schemas/Price'
                    currency:
                      type: string
                      example: EUR
                    name:
                      type: string
                      example: Cocktail name
                    short_ingredients:
                      type: array
                      items:
                        type: string
                        example: Vodka
                  type: object
            type: object
      type: object
    MenuExplore:
      properties:
        bar:
          properties:
            name:
              type: string
              example: Bar name
            subtitle:
              type: string
              example: Bar subtitle
            description:
              type: string
              example: Bar description
          type: object
        categories:
          type: array
          items:
            properties:
              name:
                type: string
                example: Category name
              cocktails:
                type: array
                items:
                  properties:
                    sort:
                      type: integer
                      example: 1
                    price:
                      $ref: '#/components/schemas/Price'
                    public_id:
                      type: string
                      example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
                    slug:
                      type: string
                      example: cocktail-name-1
                    currency:
                      type: string
                      example: EUR
                    name:
                      type: string
                      example: Cocktail name
                    short_ingredients:
                      type: array
                      items:
                        type: string
                        example: Vodka
                    image:
                      type: string
                      example: 'https://example.com/image.jpg'
                  type: object
            type: object
      type: object
    MenuRequest:
      required:
        - is_enabled
        - cocktails
      properties:
        is_enabled:
          type: boolean
        cocktails:
          type: array
          items:
            properties:
              cocktail_id:
                type: integer
                example: 1
              price:
                type: integer
                format: minor
                example: 2252
              category_name:
                type: string
                example: Category name
              sort:
                type: integer
                example: 1
              currency:
                type: string
                format: ISO 4217
                example: EUR
            type: object
      type: object
    Note:
      properties:
        id:
          type: integer
          example: 1
        note:
          type: string
          example: Note text
        user_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2022-01-01T00:00:00+00:00'
      type: object
    NoteRequest:
      required:
        - note
        - resource_id
        - resource
      properties:
        note:
          type: string
          example: Note text
        resource_id:
          type: integer
          example: 1
        resource:
          type: string
          example: cocktail
      type: object
    PersonalAccessToken:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: user_generated
        abilities:
          type: array
          items:
            type: string
          example:
            - cocktails.read
            - cocktails.write
            - ingredients.read
            - ingredients.write
        last_used_at:
          type: string
          example: '2023-05-14T21:23:40.000000Z'
        created_at:
          type: string
          example: '2023-05-14T21:23:40.000000Z'
        expires_at:
          type: string
          example: '2023-05-14T21:23:40.000000Z'
      type: object
    PersonalAccessTokenRequest:
      required:
        - abilities
      properties:
        name:
          type:
            - string
            - 'null'
          example: user_generated
        abilities:
          type: array
          items:
            $ref: '#/components/schemas/AbilityEnum'
        expires_at:
          type:
            - string
            - 'null'
          example: '2023-05-14T21:23:40.000000Z'
      type: object
    Price:
      required:
        - price
        - price_minor
        - formatted_price
        - currency
      properties:
        price:
          type: number
          format: float
          example: 13.39
        price_minor:
          type: integer
          example: 1339
        formatted_price:
          type: string
          example: EUR 13.39
        currency:
          type: string
          example: EUR
      type: object
    PriceCategory:
      required:
        - id
        - name
        - description
        - currency
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Amazon (DE)
        description:
          type:
            - string
            - 'null'
          example: Current price on amazon.de
        currency:
          type: string
          format: ISO 4217
          example: EUR
        currency_symbol:
          type: string
          example: €
      type: object
    PriceCategoryRequest:
      required:
        - name
        - currency
      properties:
        name:
          type: string
          example: Amazon (DE)
        description:
          type:
            - string
            - 'null'
          example: Current price on amazon.de
        currency:
          type: string
          format: ISO 4217
          example: EUR
      type: object
    Profile:
      required:
        - id
        - name
        - cocktails_count
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Floral
        email:
          type: string
          example: example@example.com
        is_subscribed:
          type: boolean
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/BarMembership'
      type: object
    ProfileRequest:
      required:
        - name
        - email
      properties:
        bar_id:
          type:
            - integer
            - 'null'
        name:
          type: string
          example: Bar Tender
        email:
          type: string
          example: new@email.com
        password:
          type:
            - string
            - 'null'
          format: password
          example: newpassword
        is_shelf_public:
          type: boolean
        use_parent_as_substitute:
          type: boolean
      type: object
    Rating:
      properties:
        rateable_id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        rating:
          type: integer
          example: 3
      type: object
    RegisterRequest:
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          example: admin@example.com
        name:
          type: string
          example: Bar Tender
        password:
          type: string
          format: password
          minLength: 5
          example: password
      type: object
    ServerVersion:
      required:
        - version
        - type
        - search_host
        - search_version
      properties:
        version:
          type: string
          example: 1.0.0
        latest_version:
          description: Latest version available on GitHub
          type: string
          example: 3.1.0
        is_latest:
          type: boolean
          example: true
        type:
          type: string
          example: production
        search_host:
          type: string
          example: 'https://search.example.com'
        search_version:
          type: string
          example: 1.2.0
      type: object
    ShoppingList:
      required:
        - ingredient
        - quantity
      properties:
        ingredient:
          $ref: '#/components/schemas/IngredientBasic'
        quantity:
          type: integer
          example: 3
      type: object
    ShoppingListRequest:
      required:
        - ingredients
      properties:
        ingredients:
          type: array
          items:
            properties:
              id:
                type: integer
              quantity:
                type: integer
            type: object
      type: object
    Subscription:
      properties:
        type:
          type: string
        paddle_id:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
        paused_at:
          type:
            - string
            - 'null'
          format: date-time
        ends_at:
          type:
            - string
            - 'null'
          format: date-time
        past_due:
          type: boolean
        is_recurring:
          type: boolean
        next_billed_at:
          type: array
          items:
            properties:
              currency:
                type: string
              amount:
                type: string
              date:
                type: string
                format: date-time
            type: object
        update_payment_url:
          type: string
          format: uri
        cancel_url:
          type: string
          format: uri
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      type: object
    Tag:
      required:
        - id
        - name
        - cocktails_count
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Floral
        cocktails_count:
          type: integer
          example: 12
      type: object
    TagRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Floral
      type: object
    Token:
      properties:
        token:
          type: string
          example: 1|dvWHLWuZbmWWFbjaUDla393Q9jK5Ou9ujWYPcvII
      type: object
    Transaction:
      properties:
        total:
          type: string
        tax:
          type: string
        currency:
          type: string
        status:
          type: string
        invoice_number:
          type: string
        url:
          type: string
          format: uri
        billed_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
      type: object
    User:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Bartender
        email:
          type: string
          example: admin@example.com
        is_subscribed:
          type: boolean
        role:
          properties:
            bar_id:
              type: integer
              example: 1
            role_id:
              type: integer
              example: 1
            role_name:
              type: string
              example: Admin
          type: object
      type: object
    UserBasic:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Bartender
      type: object
    UserRequest:
      required:
        - role_id
        - email
        - name
        - password
      properties:
        role_id:
          type: integer
          example: 1
        email:
          type: string
          example: admin@example.com
        name:
          type: string
          example: Bar Tender
        password:
          type: string
          format: password
          example: password
      type: object
    UserSubscription:
      required:
        - prices
        - customer
        - subscription
      properties:
        prices:
          type: string
        customer:
          type: array
          items:
            required:
              - paddle_id
              - paddle_email
              - paddle_name
            properties:
              paddle_id:
                type: string
              paddle_email:
                type: string
              paddle_name:
                type: string
            type: object
        subscription:
          oneOf:
            - $ref: '#/components/schemas/Subscription'
            - type: 'null'
      type: object
    Utensil:
      required:
        - id
        - name
        - description
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Shaker
        description:
          type:
            - string
            - 'null'
          example: Used to shake ingredients
      type: object
    UtensilRequest:
      required:
        - name
      properties:
        name:
          type: string
          example: Shaker
        description:
          type:
            - string
            - 'null'
          example: Used to shake ingredients
      type: object
    ValidationError:
      required:
        - errors
        - message
      properties:
        message:
          type: string
          example: The cocktail name must be a string. (and 2 more errors)
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      type: object
  securitySchemes:
    user_token:
      type: http
      scheme: bearer
security:
  - user_token: []
tags:
  - name: Authentication
    description: Authentication
  - name: Bars
    description: Bars
  - name: Cocktails
    description: Cocktails
  - name: Cocktail method
    description: Cocktail method
  - name: Collections
    description: Collections
  - name: Explore
    description: Explore
  - name: Exports
    description: Exports
  - name: Glasses
    description: Glasses
  - name: Images
    description: Images
  - name: Import
    description: Import
  - name: Ingredient category
    description: Ingredient category
  - name: Ingredients
    description: Ingredients
  - name: Menu
    description: Menu
  - name: Notes
    description: Notes
  - name: Tokens
    description: Tokens
  - name: Price category
    description: Price category
  - name: Profile
    description: Profile
  - name: Ratings
    description: Ratings
  - name: Server
    description: Server
  - name: 'Users: Shelf'
    description: 'Users: Shelf'
  - name: 'Users: Shopping list'
    description: 'Users: Shopping list'
  - name: Billing
    description: Billing
  - name: Tag
    description: Tag
  - name: Users
    description: Users
  - name: Utensils
    description: Utensils
